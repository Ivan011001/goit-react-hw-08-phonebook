{"version":3,"file":"static/js/184.1ea53ba0.chunk.js","mappings":"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","sources":["components/ContactEditModal/index.jsx","components/ContactList/ContactListItem/index.jsx","redux/contacts/selectors.js","components/CardLoading/index.jsx","components/ContactList/index.jsx","components/ContactFormModal/index.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Import useState from 'react' explicitly\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton'; // Import IconButton from '@mui/material'\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { MuiTelInput, matchIsValidTel } from 'mui-tel-input'; // Import MuiTelInput separately\nimport { useDispatch } from 'react-redux';\nimport { changeContact } from 'redux/contacts/actions';\n\nexport default function ContactEditModal({ contact }) {\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState(contact.name); // Use useState directly\n  const onNameChange = newValue => {\n    setContactName(newValue);\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState(contact.number);\n  const [phoneNumberValid, setPhoneNumberValid] = useState(false);\n  const onInputChange = newValue => {\n    setPhoneNumber(newValue);\n    setPhoneNumberValid(matchIsValidTel(newValue));\n  };\n\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contactData = {\n      user: {\n        name,\n        number,\n      },\n      id: contact.id,\n    };\n\n    dispatch(changeContact(contactData));\n    handleClose();\n    form.reset();\n  };\n\n  return (\n    <>\n      <IconButton\n        edge=\"end\"\n        aria-label=\"change\"\n        sx={{ mr: 2 }}\n        onClick={handleClickOpen}\n      >\n        <EditIcon color=\"success\" />\n      </IconButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Change contact \"{contact.name}\"\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            <form onSubmit={onFormSubmit}>\n              <Box style={{ display: 'flex', gap: 20 }}>\n                <FormControl variant=\"standard\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment-name\">\n                    Contact Name\n                  </InputLabel>\n                  <Input\n                    value={contactName}\n                    onChange={e => onNameChange(e.target.value)}\n                    autoComplete=\"off\"\n                    required\n                    size=\"normal\"\n                    name=\"name\"\n                    id=\"input-with-icon-adornment-name\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n\n                <FormControl variant=\"standard\">\n                  <MuiTelInput\n                    autoFocus\n                    value={phoneNumber}\n                    onChange={onInputChange}\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    size=\"small\"\n                    continents={['EU']}\n                    defaultCountry=\"UA\"\n                    placeholder=\"Contact Number\"\n                    name=\"number\"\n                    id=\"input-with-icon-adornment-number\"\n                  />\n                </FormControl>\n              </Box>\n\n              <DialogActions sx={{ mt: 3, mb: -3, mr: -3 }}>\n                <Button onClick={handleClose} autoFocus color=\"error\">\n                  Close\n                </Button>\n\n                <Button\n                  disabled={!phoneNumberValid}\n                  type=\"submit\"\n                  color=\"success\"\n                >\n                  Change\n                </Button>\n              </DialogActions>\n            </form>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactEditModal from 'components/ContactEditModal';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nexport default function ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <>\n          <ContactEditModal contact={contact} />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            <DeleteIcon color=\"error\" />\n          </IconButton>\n        </>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar {...stringAvatar(contact.name)}></Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={contact.name} secondary={contact.number} />\n    </ListItem>\n  );\n}\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsCount = state => state.contacts.contacts.length;\n","import * as React from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nexport default function CardLoading() {\n  return <LinearProgress />;\n}\n","import ContactListItem from './ContactListItem';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport CardLoading from 'components/CardLoading';\nimport { Grid } from '@mui/material';\nimport { List } from '@mui/material';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <List>\n          {contacts.map(contact => (\n            <div key={contact.id}>\n              <ContactListItem contact={contact} />\n            </div>\n          ))}\n        </List>\n      </Grid>\n\n      {isLoading && <CardLoading />}\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { SpeedDialIcon } from '@mui/material';\nimport { SpeedDial } from '@mui/material';\nimport { Button } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { MuiTelInput, matchIsValidTel } from 'mui-tel-input';\n\nexport default function ContactForModal() {\n  const [phoneNumber, setPhoneNumber] = React.useState('');\n  const [phoneNumberValid, setPhoneNumberValid] = React.useState(null);\n  const handleInputChange = newValue => {\n    setPhoneNumber(newValue);\n    setPhoneNumberValid(matchIsValidTel(newValue));\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    handleClose();\n    setPhoneNumber('');\n    setPhoneNumberValid(false);\n    form.reset();\n  };\n\n  return (\n    <div>\n      <SpeedDial\n        ariaLabel=\"SpeedDial openIcon example\"\n        sx={{ position: 'absolute', bottom: 72, right: 16 }}\n        icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n        onClick={handleClickOpen}\n      ></SpeedDial>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Add new contact</DialogTitle>\n        <DialogContent>\n          <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            <form onSubmit={onFormSubmit}>\n              <Box style={{ display: 'flex', gap: 20 }}>\n                <FormControl variant=\"standard\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment-name\">\n                    Contact Name\n                  </InputLabel>\n                  <Input\n                    autoComplete=\"off\"\n                    required\n                    size=\"normal\"\n                    name=\"name\"\n                    id=\"input-with-icon-adornment-name\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n\n                <FormControl variant=\"standard\">\n                  <MuiTelInput\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    size=\"small\"\n                    continents={['EU']}\n                    defaultCountry=\"UA\"\n                    placeholder=\"Contact Number\"\n                    name=\"number\"\n                    id=\"input-with-icon-adornment-number\"\n                    value={phoneNumber}\n                    onChange={handleInputChange}\n                  />\n                </FormControl>\n              </Box>\n\n              <Button\n                disabled={!phoneNumberValid}\n                type=\"submit\"\n                sx={{ float: 'right', mt: 2 }}\n                endIcon={<SendIcon />}\n              >\n                Add\n              </Button>\n            </form>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/actions';\nimport ContactList from 'components/ContactList';\nimport ContactFormModal from 'components/ContactFormModal';\nimport { useSelector } from 'react-redux';\nimport { selectContactsCount } from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  const contactsCount = useSelector(selectContactsCount);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contactsCount === 0 && (\n        <div\n          style={{\n            textAlign: 'center',\n            marginTop: 300,\n          }}\n        >\n          <h1 style={{ marginBottom: 20 }}>You have no contacts yet</h1>\n        </div>\n      )}\n      <ContactFormModal />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactEditModal","contact","dispatch","useDispatch","useState","name","contactName","setContactName","number","phoneNumber","setPhoneNumber","phoneNumberValid","setPhoneNumberValid","open","setOpen","handleClose","IconButton","edge","sx","mr","onClick","Edit","color","Dialog","onClose","DialogTitle","id","DialogContent","Box","m","onSubmit","e","preventDefault","form","target","contactData","user","elements","value","changeContact","reset","style","display","gap","FormControl","variant","InputLabel","htmlFor","Input","onChange","newValue","autoComplete","required","size","startAdornment","InputAdornment","position","AccountCircle","autoFocus","matchIsValidTel","mt","continents","defaultCountry","placeholder","DialogActions","mb","Button","disabled","type","stringToColor","string","i","hash","length","charCodeAt","toString","slice","ContactListItem","ListItem","secondaryAction","deleteContact","Delete","ListItemAvatar","Avatar","bgcolor","children","split","ListItemText","primary","secondary","selectContacts","state","contacts","selectIsLoading","isLoading","selectContactsCount","CardLoading","LinearProgress","ContactList","useSelector","Grid","item","xs","md","List","map","ContactForModal","React","SpeedDial","ariaLabel","bottom","right","icon","SpeedDialIcon","openIcon","newContact","addContact","float","endIcon","Send","ContactsPage","contactsCount","useEffect","getContacts","textAlign","marginTop","marginBottom"],"sourceRoot":""}