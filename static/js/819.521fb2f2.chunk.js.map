{"version":3,"file":"static/js/819.521fb2f2.chunk.js","mappings":"mXAuCe,SAASA,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAWJ,EAAAA,EAAAA,IAAYK,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,EAAwCC,EAAAA,SAAe,MAAvD,eAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAsB,WAC1BD,EAAgB,KACjB,EAED,OACE,SAACE,EAAA,EAAD,CAAQC,SAAS,SAAjB,UACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,WACE,SAACC,EAAA,EAAD,CAASC,GAAI,CAAEC,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAAUC,GAAI,MAExD,UAACC,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,EAAGL,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,WACE,SAACI,EAAA,EAAD,CACEP,GAAI,CAAEQ,GAAI,EAAGC,MAAO,QAASR,QAAS,SACtCS,QAAS,kBAAMvB,EAAS,IAAf,EAFX,kBAMCJ,IACC,SAACwB,EAAA,EAAD,CACEP,GAAI,CAAEQ,GAAI,EAAGC,MAAO,QAASR,QAAS,SACtCS,QAAS,kBAAMvB,EAAS,YAAf,EAFX,0BASJ,UAACkB,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,GAArB,WACE,UAACD,EAAA,EAAD,CACEL,GAAI,CACFM,SAAU,EACVL,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAC3BQ,IAAK,EACLC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,SAAgCjC,KAEhC,SAACkC,EAAA,EAAD,CAASC,MAAM,gBAAf,UACE,SAACX,EAAA,EAAD,CAAKL,GAAI,CAAEM,SAAU,EAAGL,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACE,SAACc,EAAA,EAAD,CAAYP,QA5CD,SAAAQ,GACzB3B,EAAgB2B,EAAMC,cACvB,EA0CwDnB,GAAI,CAAEoB,EAAG,GAAlD,UACE,SAACC,EAAA,EAAD,CAAQC,IAAK5C,EAAM6C,IAAI,0CAM/B,SAACC,EAAA,EAAD,CACExB,GAAI,CAAEyB,GAAI,QACVC,GAAG,cACHC,SAAUrC,EACVsC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdG,KAAMC,QAAQ5C,GACd6C,QAAS3C,EAdX,SAgBGT,GACC,SAACqD,EAAA,EAAD,CAAU1B,QAASlB,EAAnB,UACE,SAACqB,EAAA,EAAD,CACEH,QAAS,kBAAMzB,GAASoD,EAAAA,EAAAA,MAAf,EACTvB,UAAU,SAFZ,wBAQF,SAACsB,EAAA,EAAD,CAAU1B,QAASlB,EAAnB,UACE,SAACqB,EAAA,EAAD,CACEH,QAAS,WACPlB,IACAL,EAAS,SACV,EACD2B,UAAU,SALZ,iCAiBjB,CC3Ic,SAASwB,IACtB,OACE,iCACE,SAAC7D,EAAD,KAEA,2BACE,SAAC,KAAD,QAIP,C","sources":["components/Header/index.jsx","layout/index.jsx"],"sourcesContent":["// import HeaderNavigation from 'components/HeaderNavigation';\n// import AuthNavigation from 'components/AuthNavigation';\n// import UserMenu from 'components/UserMenu';\n// import { useSelector } from 'react-redux';\n// import { selectUserIsLogged } from 'redux/auth/selectors';\n// import { StyledHeader } from './Header.styled';\n\n// export default function Header() {\n//   const isLogged = useSelector(selectUserIsLogged);\n//   return (\n//     <StyledHeader>\n//       <HeaderNavigation />\n//       {isLogged ? <UserMenu /> : <AuthNavigation />}\n//     </StyledHeader>\n//   );\n// }\n\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectUserName,\n  selectUserEmail,\n  selectUserIsLogged,\n} from 'redux/auth/selectors';\nimport { logOut } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Header() {\n  const name = useSelector(selectUserName);\n  const email = useSelector(selectUserEmail);\n  const isLogged = useSelector(selectUserIsLogged);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            <Button\n              sx={{ my: 2, color: 'white', display: 'block' }}\n              onClick={() => navigate('/')}\n            >\n              Home\n            </Button>\n            {isLogged && (\n              <Button\n                sx={{ my: 2, color: 'white', display: 'block' }}\n                onClick={() => navigate('/contacts')}\n              >\n                Contacts\n              </Button>\n            )}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Box\n              sx={{\n                flexGrow: 1,\n                display: { xs: 'none', md: 'flex' },\n                gap: 3,\n                alignItems: 'center',\n              }}\n            >\n              <Typography textAlign=\"center\">{email}</Typography>\n\n              <Tooltip title=\"Open settings\">\n                <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                  <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                    <Avatar alt={name} src=\"/static/images/avatar/2.jpg\" />\n                  </IconButton>\n                </Box>\n              </Tooltip>\n            </Box>\n\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {isLogged ? (\n                <MenuItem onClick={handleCloseUserMenu}>\n                  <Typography\n                    onClick={() => dispatch(logOut())}\n                    textAlign=\"center\"\n                  >\n                    Log Out\n                  </Typography>\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleCloseUserMenu}>\n                  <Typography\n                    onClick={() => {\n                      handleCloseUserMenu();\n                      navigate('/login');\n                    }}\n                    textAlign=\"center\"\n                  >\n                    Log In\n                  </Typography>\n                </MenuItem>\n              )}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","import { Outlet } from 'react-router-dom';\nimport Header from 'components/Header';\n\nexport default function SharedLayout() {\n  return (\n    <>\n      <Header />\n\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n}\n"],"names":["Header","name","useSelector","selectUserName","email","selectUserEmail","isLogged","selectUserIsLogged","dispatch","useDispatch","navigate","useNavigate","React","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Adb","sx","display","xs","md","mr","Box","flexGrow","Button","my","color","onClick","gap","alignItems","Typography","textAlign","Tooltip","title","IconButton","event","currentTarget","p","Avatar","alt","src","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","logOut","SharedLayout"],"sourceRoot":""}