{"version":3,"file":"static/js/579.9f6ad832.chunk.js","mappings":"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","sources":["components/ContactList/ContactListItem/index.jsx","redux/contacts/selectors.js","components/CardLoading/index.jsx","components/ContactList/index.jsx","components/ContactFormModal/index.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nexport default function ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      secondaryAction={\n        <>\n          <IconButton edge=\"end\" aria-label=\"delete\" sx={{ mr: 2 }}>\n            <EditIcon color=\"success\" />\n          </IconButton>\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            <DeleteIcon color=\"error\" />\n          </IconButton>\n        </>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar {...stringAvatar(contact.name)}></Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={contact.name} secondary={contact.number} />\n    </ListItem>\n  );\n}\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsCount = state => state.contacts.contacts.length;\n","import * as React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\n\nexport default function CardLoading() {\n  return (\n    <Stack spacing={1}>\n      <Skeleton variant=\"rounded\" height={140} />\n      <Skeleton variant=\"text\" sx={{ fontSize: '2rem' }} />\n      <Skeleton variant=\"rounded\" height={90} />\n    </Stack>\n  );\n}\n","import ContactListItem from './ContactListItem';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport CardLoading from 'components/CardLoading';\nimport { Grid } from '@mui/material';\nimport { List } from '@mui/material';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading && <CardLoading />}\n      {!isLoading && (\n        <Grid item xs={12} md={6}>\n          <List>\n            {contacts.map(contact => (\n              <div key={contact.id}>\n                <ContactListItem contact={contact} />\n              </div>\n            ))}\n          </List>\n        </Grid>\n      )}\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { SpeedDialIcon } from '@mui/material';\nimport { SpeedDial } from '@mui/material';\nimport { Button } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { MuiTelInput, matchIsValidTel } from 'mui-tel-input';\n\nexport default function ContactForModal() {\n  const [phoneNumber, setPhoneNumber] = React.useState('');\n  const [phoneNumberValid, setPhoneNumberValid] = React.useState(null);\n  const handleInputChange = newValue => {\n    setPhoneNumber(newValue);\n    setPhoneNumberValid(matchIsValidTel(newValue));\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    handleClose();\n    setPhoneNumber('+380');\n    form.reset();\n  };\n\n  return (\n    <div>\n      <SpeedDial\n        ariaLabel=\"SpeedDial openIcon example\"\n        sx={{ position: 'absolute', bottom: 72, right: 16 }}\n        icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n        onClick={handleClickOpen}\n      ></SpeedDial>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Add new contact</DialogTitle>\n        <DialogContent>\n          <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            <form onSubmit={onFormSubmit}>\n              <Box style={{ display: 'flex', gap: 20 }}>\n                <FormControl variant=\"standard\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment-name\">\n                    Contact Name\n                  </InputLabel>\n                  <Input\n                    autoComplete=\"off\"\n                    required\n                    size=\"normal\"\n                    name=\"name\"\n                    id=\"input-with-icon-adornment-name\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n\n                <FormControl variant=\"standard\">\n                  <MuiTelInput\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    size=\"small\"\n                    continents={['EU']}\n                    defaultCountry=\"UA\"\n                    placeholder=\"Contact Number\"\n                    name=\"number\"\n                    id=\"input-with-icon-adornment-number\"\n                    value={phoneNumber}\n                    onChange={handleInputChange}\n                  />\n                </FormControl>\n              </Box>\n\n              <Button\n                disabled={!phoneNumberValid}\n                type=\"submit\"\n                sx={{ float: 'right', mt: 2 }}\n                endIcon={<SendIcon />}\n              >\n                Add\n              </Button>\n            </form>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/actions';\nimport ContactList from 'components/ContactList';\nimport ContactFormModal from 'components/ContactFormModal';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactFormModal />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","ContactListItem","name","contact","dispatch","useDispatch","ListItem","secondaryAction","IconButton","edge","sx","mr","Edit","onClick","deleteContact","id","Delete","ListItemAvatar","Avatar","bgcolor","children","split","ListItemText","primary","secondary","number","selectContacts","state","contacts","selectIsLoading","isLoading","CardLoading","Stack","spacing","Skeleton","variant","height","fontSize","ContactList","useSelector","Grid","item","xs","md","List","map","ContactForModal","React","phoneNumber","setPhoneNumber","phoneNumberValid","setPhoneNumberValid","open","setOpen","handleClose","SpeedDial","ariaLabel","position","bottom","right","icon","SpeedDialIcon","openIcon","Dialog","onClose","DialogTitle","DialogContent","Box","m","onSubmit","e","preventDefault","form","target","newContact","elements","value","addContact","reset","style","display","gap","FormControl","InputLabel","htmlFor","Input","autoComplete","required","size","startAdornment","InputAdornment","AccountCircle","mt","continents","defaultCountry","placeholder","onChange","newValue","matchIsValidTel","Button","disabled","type","float","endIcon","Send","ContactsPage","useEffect","getContacts"],"sourceRoot":""}